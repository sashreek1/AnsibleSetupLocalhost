" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd		" Show (partial) command in status line.
"set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden		" Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes)

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

syntax on

set nu

filetype plugin on

filetype indent on

set smarttab

colorscheme ir_black

set ai "Auto indent

set si "Smart indent

set wrap "Wrap lines

set shiftwidth=4

set modelines=5

set tabstop=4

set viminfo^=%

set laststatus=2

set statusline+=%F

set statusline+=%m%r%h\ %w\ \

set statusline+=CWD:\ %r%{getcwd()}

set statusline+=%h\ \ \ Line:\ %l\ \ Col:\ %c 

set statusline+=\ \ %P

set statusline+=\ \ %-14.(%l,%c%V%)\ %<%P

set autoread

set history=700

set cmdheight=2

set backspace=eol,start,indent

set whichwrap+=<,>,h,l

set smartcase

set ignorecase

set hlsearch

set magic

set showmatch

set mat=2

set ffs=unix,dos,mac

set encoding=utf8

set background=dark

let g:sqlutil_load_default_maps = 0

hi Search ctermbg=Green ctermfg=Black

set ff=unix ts=2 sw=2 ai expandtab

au BufNewFile,BufRead *.yaml,*.yml so /etc/vim/plugin/yaml.vim

set runtimepath+=/etc/vim/

nmap <F12> :set invnumber<CR>

nmap <F11> :set invpaste <CR>

syntax on

set nu

filetype plugin on

filetype indent on

set smarttab

colorscheme ir_black

set ai "Auto indent

set si "Smart indent

set wrap "Wrap lines

set shiftwidth=4

set modelines=5

set tabstop=4

set viminfo^=%

set laststatus=2

set statusline+=%F

set statusline+=%m%r%h\ %w\ \

set statusline+=CWD:\ %r%{getcwd()}

set statusline+=%h\ \ \ Line:\ %l\ \ Col:\ %c 

set statusline+=\ \ %P

set statusline+=\ \ %-14.(%l,%c%V%)\ %<%P

set autoread

set history=700

set cmdheight=2

set backspace=eol,start,indent

set whichwrap+=<,>,h,l

set smartcase

set ignorecase

set hlsearch

set magic

set showmatch

set mat=2

set ffs=unix,dos,mac

set encoding=utf8

set background=dark

let g:sqlutil_load_default_maps = 0

hi Search ctermbg=Green ctermfg=Black

set ff=unix ts=2 sw=2 ai expandtab

au BufNewFile,BufRead *.yaml,*.yml so /etc/vim/plugin/yaml.vim

set runtimepath+=/etc/vim/

nmap <F12> :set invnumber<CR>

nmap <F11> :set invpaste <CR>
